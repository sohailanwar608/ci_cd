name: Flutter

on:  #events (push and pull_request)
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]


jobs:   #here we specify the jobs - We could have multiple jobs
  build:  #name it something meaningful
    runs-on: ubuntu-latest   #runner: select a machine to use

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'


      - name: Change app name
        run: |
          set -x
          sed -i 's/android:label="ci_cd"/android:label="Actions"/' android/app/src/main/AndroidManifest.xml
          set +x

      - name: Change package name
        run: |
          flutter pub get
          flutter pub run change_app_package_name:main com.example.ci_cd

      - name: Update pubspec.yaml
        run: |
          sed -i 's|image_path: "assets/images/old_icon.png"|image_path: "assets/images/desk_icon.png"|' pubspec.yaml
          if ! grep -q 'flutter_icons:' pubspec.yaml; then
            echo 'flutter_icons:' >> pubspec.yaml
            echo '  android: true' >> pubspec.yaml
            echo '  ios: true' >> pubspec.yaml
            echo '  image_path: "assets/icon/desk_icon.png"' >> pubspec.yaml
          elif ! grep -q 'image_path:' pubspec.yaml; then
            sed -i '/flutter_icons:/a\  image_path: "assets/icon/desk_icon.png"' pubspec.yaml
          else
            sed -i 's|image_path: ".*"|image_path: "assets/icon/desk_icon.png"|' pubspec.yaml
         fi
         chmod 644 pubspec.yaml

#      - name: Build Android
#        run: cd android && ./gradlew assembleDebug
#        working-directory: ./android

      - name: Build Gradle
        run: flutter build apk --debug
      - run: ls build/app/outputs/flutter-apk
      - run: ls build/app/outputs/bundle/release
      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.APP_ID}}
          token: ${{secrets.TOKEN}}
          groups: tester
          file: build/app/outputs/flutter-apk/app-debug.apk