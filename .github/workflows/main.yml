name: Flutter

on:
  pull_request:
    types:
      - labeled

jobs:
  build:
    if: github.event.label.name == 'DeliverToTesters'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'


      - name: Set Branch Name
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            PULL_REQUEST_BASE=$(curl -sSL "${{ github.api_url }}/repos/${{ github.repository }}/pulls/${{ github.event.number }}" | jq -r '.base.ref')
            BRANCH_NAME=$(echo "${GITHUB_REF#refs/pull/*/merge}" | sed 's/\//-/')
            echo "PULL_REQUEST_BASE=${PULL_REQUEST_BASE}" >> $GITHUB_ENV
          else
            BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}")
          fi
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV

      - name: Print Branch Name and Parent Branch
        run: |
          echo "Branch Name: ${{ env.BRANCH_NAME }}"
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "Parent Branch (Base Branch): ${{ env.PULL_REQUEST_BASE }}"
          fi

#      - name: Set Branch Name
#        run: echo "BRANCH_NAME=${{ github.head_ref }}" >> $GITHUB_ENV
#
#      - name: Print Branch Name
#        run: |
#           echo "Branch Name: ${{ env.BRANCH_NAME }}"

      - name: Extract values from appConfig.dart
        id: extract-values
        run: |
          APP_NAME=$(grep 'String appName' lib/appConfig.dart | awk -F '=' '{print $2}' | tr -d ' ";')
          PACKAGE_NAME=$(grep 'String packageName' lib/appConfig.dart | awk -F '=' '{print $2}' | tr -d ' ";')
          APP_ICON=$(grep 'String appIcon' lib/appConfig.dart | awk -F '=' '{print $2}' | tr -d ' ";')
          VERSION_NUMBER=$(grep 'String versionNumber' lib/appConfig.dart | awk -F '= ' '{print $2}' | tr -d ' ";')
          
          echo "VERSION_NUMBER=$VERSION_NUMBER" >> $GITHUB_ENV
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV
          echo "APP_ICON=$APP_ICON" >> $GITHUB_ENV

      - name: Debugging Steps
        run: |
          cat lib/appConfig.dart
          echo "PACKAGE_NAME: ${{ env.PACKAGE_NAME }}"
          echo "APP_NAME: ${{ env.APP_NAME }}"
          echo "APP_ICON: ${{ env.APP_ICON }}"
          echo "VERSION_NUMBER: ${{ env.VERSION_NUMBER }}"


      - name: Change app name
        run: |
          set -x
          sed -i "s/android:label=\"ci_cd\"/android:label=\"${{ env.APP_NAME }}\"/" android/app/src/main/AndroidManifest.xml
          set +x
      

      - name: Change package name
        run: |
          flutter pub get
          flutter pub run change_app_package_name:main ${{ env.PACKAGE_NAME }}
      

      - name: Check Directory Contents
        run: ls -R assets/icon


      - name: Update pubspec.yaml
        run: |
          sed -i "s|image_path:.*|image_path: \"assets/icon/${{ env.APP_ICON }}\"|" pubspec.yaml
          if ! grep -q 'image_path:' pubspec.yaml; then
             echo "flutter_icons section not found, adding..."
             echo "flutter_icons:" >> pubspec.yaml
             echo "  android: true" >> pubspec.yaml
             echo "  ios: true" >> pubspec.yaml
             echo "  image_path: \"${{ env.APP_ICON }}\"" >> pubspec.yaml
          else
             echo "flutter_icons section found, no changes needed."
          fi
          flutter pub get
          flutter pub run flutter_launcher_icons:main
          

      - name: Update pubspec.yaml with version from appConfig.dart
        run: |
            sed -i "s/version: .*/version: $VERSION_NUMBER/" pubspec.yaml
            flutter pub get
          
          
      - name: Commit changes
        run: |
         git config --global user.email "${{ github.actor }}@users.noreply.github.com"
         git config --global user.name "${{ github.actor }}"
         git add .
         git commit -m "Update version number and other files"   


      - name: Merge Changes to Parent Branch
        if: success() && env.PULL_REQUEST_BASE != '' && env.PULL_REQUEST_BASE != 'main'
        run: |
         git fetch origin ${{ env.PULL_REQUEST_BASE }}
         git checkout ${{ env.PULL_REQUEST_BASE }}
         git merge ${{ env.BRANCH_NAME }} --no-edit


         git config --global credential.helper "store --file=.git/credentials"  
         echo "https://github.com/sohailanwar608/ci_cd.git:${{ secrets.GIT_ACCESS_TOKEN }}" > .git/credentials
         # Push changes back to the repository
         git push origin ${{ env.PULL_REQUEST_BASE }}



      - name: Build Gradle
        run: flutter build apk --debug
      - run: ls build/app/outputs/flutter-apk
#      - run: ls build/app/outputs/bundle/release
      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.APP_ID}}
          token: ${{secrets.TOKEN}}
          groups: tester
          file: build/app/outputs/flutter-apk/app-debug.apk
