name: Flutter

#on:
#  pull_request:
#    types:
#      - labeled
on:
  push:
    branches: [ main ]

jobs:
  build:
#    if: github.event.label.name == 'Deliverfastelane'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'


      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'

      - name: Clean Flutter Dependencies.
        run: flutter clean

      - name: Get Flutter Dependencies.
        run: flutter pub get


      - name: Cache Ruby - Bundler
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-


      - name: Cache Gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches/
          key: cache-clean-gradle-${{ matrix.os }}-${{ matrix.jdk }}

      - name: Cache Gradle Wrapper
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper/
          key: cache-clean-wrapper-${{ matrix.os }}-${{ matrix.jdk }}


      - name: Install bundle
        run: |
          cd android   # Change directory to the android directory where Gemfile is located
          bundle config path vendor/bundle   # Configure Bundler to use vendor/bundle directory
          bundle install --jobs 4 --retry 3 # Install gems specified in Gemfile
          

#      - name: Grant Permission to Execute
#        run: chmod +x android/gradlew

      - name: Set environment variables from secrets
        run: |
          echo "FIREBASE_APP_ID=${{ secrets.APP_ID }}" >> $GITHUB_ENV
          echo "FIREBASE_TOKEN=${{ secrets.TOKEN }}" >> $GITHUB_ENV



      - name: Build Gradle
        run: flutter build apk --debug
      #      - run: ls build/app/outputs/bundle/release

      - name: Archive Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: debug-apk


      - name: Distribute app with ðŸ”¥ App Distribution ðŸš€
        run: |
          cd android   # Change directory to the android directory where Gemfile is located
          bundle exec fastlane distribute
          

